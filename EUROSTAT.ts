// Generated by https://quicktype.io
//
// To change quicktype's target language, run command:
//
//   "Set quicktype target language"

export interface Eurostat {
  Structure: Structure;
}

export interface Structure {
  "-common": string;
  "-compact": string;
  "-cross": string;
  "-generic": string;
  "-query": string;
  "-schemaLocation": string;
  "-structure": string;
  "-utility": string;
  "-xmlns": string;
  "-xsi": string;
  CodeLists: CodeLists;
  Concepts: Concepts;
  Header: Header;
  KeyFamilies: KeyFamilies;
}

export interface CodeLists {
  CodeList: CodeList[];
}

export interface CodeList {
  "-agencyID": string;
  "-id": string;
  "-isFinal"?: string;
  Code: CodeElement[] | PurpleCode;
  Name: NameElement[] | NameElement;
}

export interface CodeElement {
  "-value": string;
  Description: NameElement[] | NameElement;
}

export interface NameElement {
  "#text": string;
  "-lang": Lang;
}

export enum Lang {
  De = "de",
  En = "en",
  Fr = "fr",
}

export interface PurpleCode {
  "-value": string;
  Description: NameElement[];
}

export interface Concepts {
  ConceptScheme: ConceptScheme;
}

export interface ConceptScheme {
  "-agencyID": string;
  "-id": string;
  "-isFinal": string;
  Concept: Concept[];
  Name: NameElement;
}

export interface Concept {
  "-id": string;
  Name: NameElement[] | NameElement;
}

export interface Header {
  ID: string;
  Name: NameElement;
  Prepared: string;
  Receiver: Receiver;
  Sender: Receiver;
  Test: string;
  Truncated: string;
}

export interface Receiver {
  "-id": string;
  Name: NameElement;
}

export interface KeyFamilies {
  KeyFamily: KeyFamily;
}

export interface KeyFamily {
  "-agencyID": string;
  "-id": string;
  "-isExternalReference": string;
  "-isFinal": string;
  Components: Components;
  Name: NameElement;
}

export interface Components {
  Attribute: Attribute[];
  Dimension: Dimension[];
  PrimaryMeasure: PrimaryMeasure;
  TimeDimension: PrimaryMeasure;
}

export interface Attribute {
  "-assignmentStatus": string;
  "-attachmentLevel": string;
  "-codelist": string;
  "-conceptRef": string;
  "-conceptSchemeRef": string;
  "-crossSectionalAttachDataSet"?: string;
  "-crossSectionalAttachGroup"?: string;
  "-crossSectionalAttachObservation"?: string;
  "-crossSectionalAttachSection"?: string;
  TextFormat?: TextFormat;
}

export interface TextFormat {
  "-textType": string;
}

export interface Dimension {
  "-codelist": string;
  "-conceptRef": string;
  "-conceptSchemeRef": string;
  "-isFrequencyDimension"?: string;
  "-crossSectionalAttachDataSet"?: string;
  "-crossSectionalAttachGroup"?: string;
  "-crossSectionalAttachObservation"?: string;
  "-crossSectionalAttachSection"?: string;
}

export interface PrimaryMeasure {
  "-conceptRef": string;
  "-conceptSchemeRef": string;
  TextFormat: TextFormat;
}
